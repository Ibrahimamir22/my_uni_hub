version: "3.8"

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      # Use environment variables from .env file or system environment
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-uni_hub}
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgbouncer:
    image: edoburu/pgbouncer:1.18.0
    environment:
      - DB_USER=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-uni_hub}
      - POOL_MODE=transaction
      - MAX_CLIENT_CONN=1000
      - DEFAULT_POOL_SIZE=20
      - RESERVE_POOL_SIZE=10
      - POOL_TIMEOUT=30
      - AUTH_TYPE=md5
      - AUTH_FILE=/etc/pgbouncer/userlist.txt
    volumes:
      - pgbouncer_data:/etc/pgbouncer
    ports:
      - "6432:5432"
    depends_on:
      - db
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      pgbouncer:
        condition: service_started
    volumes:
      # Persistent media volume
      - media_volume:/app/media
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-uni_hub}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432  # Still 5432 because inside Docker's network, the container uses the default port
      # Email vars - prefer setting these in .env or system environment
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
      # Other common backend settings
      - CORS_ALLOWED_ORIGINS=http://localhost:3000 # Adjust as needed
    # Base command (will be overridden in dev/prod)
    # Note: The Dockerfile CMD is used if 'command' is not specified here or in overrides
    expose:
      - "8000" # Expose port internally, override will publish
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000/api
      - NEXT_PUBLIC_BACKEND_URL=http://backend:8000
    # Base command defined in frontend/Dockerfile CMD
    expose:
      - "3000" # Expose port internally, override will publish
    restart: unless-stopped
  redis:
    image: redis:7
    ports:
      - "6379:6379" # Optional: Expose if needed externally
    restart: unless-stopped  

volumes:
  postgres_data:
  media_volume:
  pgbouncer_data:
